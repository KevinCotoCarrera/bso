---
import Layout from "../layouts/Layout.astro";
import AuthFormContainer from "../components/AuthFormContainer.astro";
import PasswordToggle from "../components/PasswordToggle.astro";
import Button from "../components/Button.astro";
import { ViewTransitions, fade } from 'astro:transitions';


---

<Layout title="Login">
		<AuthFormContainer>
			
			
			<form  transition:animate={fade({duration: '0.4s'})}  action="/login" method="POST">
			  <label for="email">Email</label>
			  <input type="email" id="email" name="email" required>
		
			  <label for="password">Password</label>
			  <PasswordToggle id="password"/>
			<Button type="submit" text="Login"/>
			</form>
		</AuthFormContainer>
		<ViewTransitions/>
</Layout>
  <script is:inline>
	document.addEventListener('DOMContentLoaded', () => {
	  const eyeIcon = document.getElementById('togglePassword');
	  const passwordInput = document.getElementById('password');
  
	  if (eyeIcon && passwordInput) {
		// Function to update the eye icon state
		function updateEyeIconState() {
		  if (passwordInput.value === '') {
			eyeIcon.classList.add('disabled');
			passwordInput.type = 'password';
			eyeIcon.textContent = 'üëÅÔ∏è';
		  } else {
			eyeIcon.classList.remove('disabled');
		  }
		}
  
		// Initial call to set the correct state
		updateEyeIconState();
  
		// Event listener to watch for changes in the password input's value
		passwordInput.addEventListener('input', () => {
		  updateEyeIconState();
		});
  
		// Click event to toggle password visibility
		eyeIcon.addEventListener('click', () => {
		  if (passwordInput) {
			if (passwordInput.type === 'password') {
			  passwordInput.type = 'text';
			  eyeIcon.textContent = 'üôà';
			} else {
			  passwordInput.type = 'password';
			  eyeIcon.textContent = 'üëÅÔ∏è';
			}
		  }
		});
	  }
	});
  </script>
  
  


<style>


	
	
	
    label {
      font-weight: bold;
      margin-top: 10px;
      display: block;
	
    }
	
    
	.togglePassword{
		cursor: pointer;
		position: absolute; 
		right: 10px; 
		top: 40%; 
		transform: translateY(-50%);
	}
	.disabled{
		opacity: 0.5;
		pointer-events: none;
	}

    button {
      width: 100%;
	  align-self: flex-end;
      padding: 10px;
      background-color: #764ba2;
      color: white;
      border: none;
      border-radius: 5px;
      font-size: 16px;
      cursor: pointer;
	  transition: background-color 0.5s ;
    }

    button:hover {
      background-color: #4d0a8f;
    }
</style>